---
# ansible-playbook -i HOST, -u `whoami` -e path=/data/pyenv -e group=pyenv pyenv.yml

# apt-get install -y git make libssl-dev build-essential zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev xz-utils       openssl gcc
# yum install -y patch git gcc openssl-devel zlib-devel bzip2 bzip2-devel readline-devel sqlite sqlite-devel

# wget https://www.python.org/ftp/python/
# wget http://mirrors.sohu.com/python/

# 3.6.4/Python-3.6.4.tar.xz
# 3.5.3/Python-3.5.3.tar.xz
# 2.7.13/Python-2.7.13.tar.xz
-
  hosts:
    all

  environment:
    PYENV_ROOT: "{{path}}"

  vars:
    group: pyenv
    packages:
      "Ubuntu":
        - "wget"
        - "curl"
        - "make"
        - "gcc"
        - "openssl"
        - "zlib1g-dev"
        - "libbz2-dev"
        - "libreadline-dev"
        - "libsqlite3-dev"
        - "llvm"
        - "libncurses5-dev"
        - "xz-utils"
        - "libssl-dev"
        - "build-essential"
      "CentOS":
        - "wget"
        - "curl"
        - "make"
        - gcc
        - openssl-devel
        - zlib-devel
        - bzip2
        - readline-devel
        - sqlite
        - bzip2-devel
        - sqlite-devel
        - patch

  tasks:

  -
    name: test path
    stat:
      path: "{{path}}"
    register: pyenv_root

  -
    assert:
      that:
        - "pyenv_root.stat.exists == False"
      msg: "{{path}} exists!"

  -
    name: test env PYENV_ROOT
    shell: cat ~/.bash_profile | grep -c PYENV_ROOT || true
    register: env_pyenv
  -
    name: append PYENV_ROOT
    shell: echo "export PYENV_ROOT={{path}}" >> ~/.bash_profile && echo "export PATH=\$PYENV_ROOT/bin:\$PATH" >> ~/.bash_profile
    when: env_pyenv.stdout == "0"

  -
    package:
      name: git

  -
    name: require installer.sh
    stat:
      path: /tmp/pyenv-installer.sh
    register: installer

  -
    name: get installer.sh
    get_url:
      url: https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer
      dest: /tmp/pyenv-installer.sh
      mode: 0555
      force: no
    when: installer.stat.exists == False

  -
    name: install pyenv
    shell: bash /tmp/pyenv-installer.sh


  -
    name: pyenv init
    shell: cat ~/.bash_profile | grep -c "pyenv init" || true
    register: init
  -
    name: append init
    shell: echo 'eval "$(pyenv init -)"' >> ~/.bash_profile && echo 'eval "$(pyenv virtualenv-init -)"' >> ~/.bash_profile
    when: init.stdout == "0"

  -
    name: mkdir PYENV_ROOT/cache
    file:
      path: "{{path}}/cache"
      state: directory
      mode: 0775
      force: no

  -
    name: "set PYENV_ROOT' group"
    file:
      path: "{{path}}"
      group: "{{group}}"
      recurse: yes
    when: group != ''

  -
    name: "packages"
    package: name={{ item }}
    with_items: "{{packages[ansible_distribution]}}"
